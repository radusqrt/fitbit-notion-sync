name: Manual Backfill Fitbit Data

on:
  workflow_dispatch:
    inputs:
      start_date:
        description: 'Start date (YYYY-MM-DD) - leave empty for last week'
        required: false
        type: string
      end_date:
        description: 'End date (YYYY-MM-DD) - leave empty for last week'
        required: false
        type: string
      last_week:
        description: 'Backfill last 7 days (ignores date inputs)'
        required: false
        type: boolean
        default: true

jobs:
  backfill:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create .env file
      run: |
        echo "FITBIT_CLIENT_ID=${{ secrets.FITBIT_CLIENT_ID }}" >> .env
        echo "FITBIT_CLIENT_SECRET=${{ secrets.FITBIT_CLIENT_SECRET }}" >> .env
        echo "FITBIT_ACCESS_TOKEN=${{ secrets.FITBIT_ACCESS_TOKEN }}" >> .env
        echo "FITBIT_REFRESH_TOKEN=${{ secrets.FITBIT_REFRESH_TOKEN }}" >> .env
        echo "NOTION_TOKEN=${{ secrets.NOTION_TOKEN }}" >> .env
        echo "NOTION_DATABASE_ID=${{ secrets.NOTION_DATABASE_ID }}" >> .env
        echo "GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}" >> .env
        echo "GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}" >> .env
        echo "GOOGLE_REFRESH_TOKEN=${{ secrets.GOOGLE_REFRESH_TOKEN }}" >> .env
        echo "GOOGLE_ACCESS_TOKEN=${{ secrets.GOOGLE_ACCESS_TOKEN }}" >> .env
        echo "GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}" >> .env
    
    - name: Run backfill (last week)
      if: ${{ github.event.inputs.last_week == 'true' || (github.event.inputs.start_date == '' && github.event.inputs.end_date == '') }}
      run: python backfill_fitbit_data.py --last-week
    
    - name: Run backfill (custom date range)
      if: ${{ github.event.inputs.last_week == 'false' && (github.event.inputs.start_date != '' || github.event.inputs.end_date != '') }}
      run: |
        if [ -n "${{ github.event.inputs.start_date }}" ] && [ -n "${{ github.event.inputs.end_date }}" ]; then
          python backfill_fitbit_data.py --start-date "${{ github.event.inputs.start_date }}" --end-date "${{ github.event.inputs.end_date }}"
        elif [ -n "${{ github.event.inputs.start_date }}" ]; then
          python backfill_fitbit_data.py --start-date "${{ github.event.inputs.start_date }}"
        elif [ -n "${{ github.event.inputs.end_date }}" ]; then
          python backfill_fitbit_data.py --end-date "${{ github.event.inputs.end_date }}"
        else
          python backfill_fitbit_data.py --last-week
        fi